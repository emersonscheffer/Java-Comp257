
//(Prime Numbers) A positive integer is prime if it’s divisible by only 1 and itself.
//For example, 2, 3, 5 and 7 are prime, but 4, 6, 8 and 9 are not. The number 1, by
//definition, is not prime.

//a) Write a method that determines whether a number is prime.

//b) Use this method in an application that determines and displays all the prime numbers
//less than 10,000. How many numbers up to 10,000 do you have to test to ensure that
//you’ve found all the primes?

//c) Initially, you might think that n/2 is the upper limit for which you must
//test to see whether a number n is prime, but you need only go as high as the
//square root of n. Rewrite the program, and run it both ways.

public class Ex_5_25PrimeNumbers {

	public static void main(String[] args) {
		int counter = 0;
		
		int maxNumber = 10000;
		
		//Part A
		for (int j = 0; j < maxNumber; j++) {
			if(isPrime(j)) {
				counter++;
				System.out.println(counter + " -> " + j);
			}
		}
		//Part B
		System.out.println("");
		System.out.println("");
		
		System.out.println("PART B");
		
		System.out.println("This is how many times it was tested n/2: "+isPrime2(maxNumber));
		
		//Part C
		System.out.println("");
		System.out.println("");
		
		System.out.println("PART C");
		
		System.out.println("This is how many times it was tested Square Root of n: "+isPrime3(maxNumber));
		

	}
	
	
	//part A
	public static boolean isPrime(int a) {
		
		
        if (a <= 1) {
        	return false; 
        }
      
        for (int i = 2; i < a; i++) 
            if (a % i == 0) {
            	return false; 
            }
      
        return true; 
	}
	
	//part B
		public static int isPrime2(int a) {
			
			int counter = 1;
			
			int limitDivided = a / 2;
			
	        if (a <= 1) { 
	        	;
	        }
	      
	        for (int i = 2; i < limitDivided; ++i) { 
	            
	        	counter++;
	        	if (a % i == 0) {
	            	
	        		;
	            }
	            
	        }
	       
	        return counter; 
		}
		
		//part C
		public static int isPrime3(int a) {
			
			int counter = 1;
			
			double limitDivided = Math.sqrt(a);
			
	        if (a <= 1) { 
	        	;
	        }
	      
	        for (int i = 2; i < limitDivided; ++i) { 
	            
	        	counter++;
	        	if (a % i == 0) {
	            	
	        		;
	            }
	            
	        }
	       
	        return counter; 
		}

}
	

